openapi: 3.0.3
info:
  title: RMU Tactical API
  description: RMU Tactical API
  contact:
    name: Luis Cabrera
    url: https://github.com/labcabrera
    email: lab.cabrera@gmail.com
  version: 0.1.0
servers:
  - url: http://localhost:3003/v1
tags:
  - name: Tactical games
    description: Tactical games
  - name: Tactical characters
    description: Tactical characters
  - name: Tactical game rounds
    description: Tactical game rounds
  - name: Initiative
    description: Initiative
  - name: Actions
    description: Actions
paths:
  /tactical-games:
    get:
      tags:
        - Tactical games
      summary: Find tactical games
      operationId: findTacticalGames
      parameters:
        - name: search
          in: query
          description: Search expression
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
          example: 0    
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10           
          example: 10
        - name: sort
          in: query
          description: Sorting criteria
          required: false
          schema:
            type: array
            items:
              type: string
              example: id,desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedContentTacticalGame'
    post:
      tags:
        - Tactical games
      summary: Creates a new tactical game
      operationId: createTacticalGame
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacticalGameCreateCmd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalGame'
        '400':
          description: Invalid tactical game creation data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /tactical-games/{tacticalGameId}:
    get:
      tags:
        - Tactical games
      summary: Find tactical game by id
      operationId: findTacticalGameById
      parameters:
        - name: tacticalGameId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalGame'
        '404':
          description: Tactical game not found
    patch:
      tags:
        - Tactical games
      summary: Updates a tactical game
      operationId: updateTacticalGame
      parameters:
        - name: tacticalGameId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacticalGameUpdateCmd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalGame'
        '400':
          description: Invalid tactical game update data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Tactical game not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - Tactical games
      summary: Delete tactical game by id
      operationId: deleteTacticalGame
      parameters:
        - name: tacticalGameId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: Tactical game not found

  /tactical-games/{tacticalGameId}/close:
    post:
      tags:
        - Tactical games
      summary: Close tactical game
      operationId: closeTacticalGame
      parameters:
        - name: tacticalGameId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalGame'
        '404':
          description: Tactical game not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /tactical-games/{tacticalGameId}/rounds/{round}/characters:
    get:
      tags:
        - Tactical game rounds
      summary: Get tactical game round info
      operationId: findTacticalGameCharacterRounds
      parameters:
        - name: tacticalGameId
          in: path
          required: true
          schema:
            type: string
        - name: round
          in: path
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacterRound'

  /tactical-games/{tacticalGameId}/rounds/start:
    post:
      tags:
        - Tactical game rounds
      summary: Start tactical game
      operationId: startTacticalGame
      parameters:
        - name: tacticalGameId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalGame'
        '404':
          description: Tactical game not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'   
  /characters:
    get:
      tags:
        - Tactical characters
      summary: Find tactical characters
      operationId: findTacticalCharacters
      parameters:
        - name: search
          in: query
          description: Search expression
          required: false
          schema:
            type: string
        - name: tacticalGameId
          in: query
          description: Tactical game identifier
          required: false
          schema:
            type: string
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
          example: 0    
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            format: int32
            default: 10           
          example: 10
        - name: sort
          in: query
          description: Sorting criteria
          required: false
          schema:
            type: array
            items:
              type: string
              example: id,desc
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedContentTacticalCharacter'
    post:
      tags:
        - Tactical characters
      summary: Creates a new tactical character
      operationId: createTacticalCharacter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacticalCharacterCreateCmd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacter'
        '400':
          description: Invalid tactical game creation data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /characters/{characterId}:
    get:
      tags:
        - Tactical characters
      summary: Find tactical character by id
      operationId: findTacticalCharacterById
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacter'
        '404':
          description: Tactical character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    patch:
      tags:
        - Tactical characters
      summary: Updates a tactical character
      operationId: updateTacticalCharacter
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacticalCharacterUpdateCmd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacter'
        '400':
          description: Invalid tactical character update data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Tactical character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
    delete:
      tags:
        - Tactical characters
      summary: Delete tactical character by id
      operationId: deleteTacticalCharacter
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: OK
        '404':
          description: Tactical character not found

  /characters/{characterId}/items:
    post:
      tags:
        - Tactical characters
      summary: Add item to character
      operationId: addItem
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacticalCharacterAddItemCmd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacter'
        '400':
          description: Invalid tactical game creation data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Tactical character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /characters/{characterId}/items/{itemId}:
    delete:
      tags:
        - Tactical characters
      summary: Delete character item
      operationId: deleteItem
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacter'
        '400':
          description: Invalid item identifier
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
        '404':
          description: Tactical character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /characters/{characterId}/equipment:
    post:
      tags:
        - Tactical characters
      summary: Equip or unequip carried items
      operationId: equipItem
      parameters:
        - name: characterId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacticalCharacterEquipItemCmd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacter'
        '404':
          description: Tactical character not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'

  /initiative/{characterRoundId}/roll/{initiativeRoll}:
    post:
      tags:
        - Initiative
      summary: Set character initiative
      operationId: updateCharacterInitiative
      parameters:
        - name: characterRoundId
          in: path
          required: true
          schema:
            type: string
        - name: initiativeRoll
          in: path
          required: true
          schema:
            type: number
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalCharacterRound'
        '404':
          description: Tactical character round not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
  /actions/character/{tacticalCharacter}:
    post:
      tags:
        - Actions
      parameters:
        - name: tacticalCharacter
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TacticalActionCreateCmd'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TacticalAction'
components:
  schemas:
    TacticalGame:
      type: object
      required:
        - id
        - name
        - status
        - round
        - user
      properties:
        id:
          type: string
          description: Tactical game identifier
          example: 66545720ccc0b409343736b2
        name:
          type: string
          description: Tactical game name
          example: Tactical game demo
        status:
          $ref: '#/components/schemas/TacticalGameState'
        round:
          type: integer
          format: int32
          description: Tactical game current round
          example: 1
        phase:
          $ref: '#/components/schemas/TacticalGamePhase'
        factions:
          type: array
          items:
            type: string
        user:
          type: string
          description: Tactical game owner
    TacticalGameState:
      type: string
      description: Tactical game current state
      enum:
        - created
        - open
        - closed
    TacticalGamePhase:
      type: string
      description: Tactical game current phase
      enum:
        - initiative
        - actions
        - upkeep
    TacticalGameCreateCmd:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          description: Tactical game name
          example: Tactical game demo
        factions:
          type: array
          items:
            type: string
        description:
          type: string
          description: Tactical game description
          example: Tactical game demo description
    TacticalGameUpdateCmd:
      type: object
      properties:
        id:
          type: string
          description: Tactical game identifier
          example: 66545720ccc0b409343736b2
        name:
          type: string
          description: Tactical game name
          example: Tactical game demo
        factions:
          type: array
          items:
            type: string
    TacticalCharacter:
      type: object
      properties:
        id:
          type: string
          description: Tactical character identifier
          example: 66545720ccc0b409343736b2
        name:
          type: string
          description: Tactical character name
          example: Orc 1
        faction:
          type: string
          example: Evil
        user:
          type: string
          description: Tactical game owner
    TacticalCharacterCreateCmd:
      type: object
      required:
        - name
        - tacticalGameId
      properties:
        name:
          type: string
          description: Tactical character name
          example: Orc 1
        tacticalGameId:
          type: string
          description: Tactical game identifier
          example: 66545720ccc0b409343736b2
        faction:
          type: string
          description: Tactical character faction
          example: Evil
        description:
          type: string
          description: Tactical character description
          example: Orc 1 description
    TacticalCharacterUpdateCmd:
      type: object
      properties:
        name:
          type: string
          description: Tactical character name
          example: Tactical game demo
        faction:
          type: string
          description: Tactical character faction
          example: Evil
    TacticalCharacterAddItemCmd:
      type: object
      required:
        - itemTypeId
        - category
      properties:
        itemTypeId:
          type: string
          example: dager
        category:
          type: string
          example: weapon
    TacticalCharacterEquipItemCmd:
      type: object
      required:
        - itemId
      properties:
        itemId:
          type: string
        slot:
          type: string
    TacticalCharacterRound:
      type: object
      properties:
        name:
          type: string
          description: Tactical character round id
        tacticalGameId:
          type: string
        round:
          type: number
          format: int32
        tacticalCharacterId:
          type: string
        initiative:
          $ref: '#/components/schemas/TacticalCharacterRoundInitiative'
    TacticalCharacterRoundInitiative:
      type: object
      properties:
        base:
          type: number
          format: int32
          example: 12
        penalty:
          type: number
          format: int32
          example: -5
        roll:
          type: number
          format: int32
          example: 6
        total:
          type: number
          format: int32
          example: 13
    TacticalAction:
      type: object
      properties:
        id:
          type: string
        type:
          $ref: '#/components/schemas/TacticalActionType'
    TacticalActionCreateCmd:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/TacticalActionType'
        phaseStart:
          type: number
          format: int32
          description: Phase start
          example: 0
        actionPoints:
          type: number
          format: int32
          description: Action points
          example: 3
    TacticalActionType:
      type: string
      description: Tactical action type
      enum:
        - movement
        - attack
        - staticAction
        - maneouver
    PagedContentTacticalGame:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TacticalGame'
        info:
          $ref: '#/components/schemas/PagedContentInfo'
    PagedContentTacticalCharacter:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TacticalCharacter'
        info:
          $ref: '#/components/schemas/PagedContentInfo'
    PagedContentInfo:
      type: object
      properties:
        size:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int32
        page:
          type: integer
          format: int32
    ApiError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        timestamp:
          type: string
          format: date